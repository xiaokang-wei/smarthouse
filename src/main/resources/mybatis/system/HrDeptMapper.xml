<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.hr.dept.mapper.HrDeptMapper">

	<resultMap type="com.ruoyi.project.system.hr.dept.domain.HrDept" id="HrDeptResult">
		<result property="dId"     column="d_id"      />
		<result property="deptName"     column="d_name"      />
		<result property="dPid"     column="d_pid"      />
		<result property="parentName" column="parent_name" />
		<result property="createTime" column="d_createTime" />

	</resultMap>

	<select id="selectDeptList" resultMap="HrDeptResult" parameterType="com.ruoyi.project.system.hr.dept.domain.HrDept">
		select d_id,d_name,d_pid,d_createTime,status from t_dept
		<if test="deptName != null and deptName != ''">
			where d_name like concat('%', #{deptName}, '%')
		</if>
		<if test="dPid != null ">
			AND d_pid = #{dPid}
		</if>

		order by d_pid
	</select>

	<select id="selectDeptById" resultMap="HrDeptResult" resultType="com.ruoyi.project.system.hr.dept.domain.HrDept" >
		select d.d_id,d.d_name,d.d_pid,status,
		(select d_name from t_dept where d_id = d.d_pid) parent_name
		from t_dept d
		<if test="dId != null and dId != 0">
			where d.d_id=#{dId}
		</if>
	</select>

	<select id="selectEmpDeptTree" resultType="java.lang.String" parameterType="integer">
		select concat(d.d_id, d.d_name) as d_name
		from t_dept d
			left join t_emp e on d.d_id = e.dept_no
		where  e.e_id = #{eId}
		order by d_pid

	</select>

	<insert id="insertDept" >
		insert into t_dept(
		<if test="dept.deptName != null and dept.deptName != ''">d_name,</if>
		<if test="dPid != null ">d_pid,</if>
		<if test="dept.status != null ">status,</if>
		d_createTime
		)values(
		<if test="dept.deptName != null and dept.deptName != ''">#{dept.deptName},</if>
		<if test="dPid != null ">#{dPid},</if>
		<if test="dept.status != null ">#{dept.status},</if>
		sysdate()
		)
	</insert>

	<select id="selectDeptByNameAndPid" resultMap="HrDeptResult" >
		select d_id,d_name,d_pid,d_createTime,status from t_dept
		<if test="deptName != null and deptName != ''">
			where d_name like concat('%', #{deptName}, '%')
		</if>
		<if test="dPid != null ">
			AND d_pid = #{dPid}
		</if>
	</select>

<!--	<result property="dId"     column="d_id"      />-->
<!--	<result property="deptName"     column="d_name"      />-->
<!--	<result property="dPid"     column="d_pid"      />-->
<!--	<result property="parentName" column="parent_name" />-->
<!--	<result property="createTime" column="d_createTime" />-->

	<update id="updateDept">
		update t_dept
		<set>
			<if test="deptName != null and deptName != ''">d_name = #{deptName},</if>
			<if test="dPid != null">d_pid = #{dPid},</if>
			<if test="status != null ">status = #{status},</if>
		</set>
		<if test="dId != null ">
		where d_id = #{dId}
		</if>
	</update>

	<select id="selectDeptCount" resultType="int">
		select COUNT(1) from t_dept
		<if test="dId != null ">
			where d_pid = #{dId}
		</if>

	</select>

	<select id="checkDeptExistUser" resultType="int">
		select COUNT(e.e_name) from t_dept d JOIN t_emp e
		<if test="dId != null ">
			where #{dId} = e.dept_no
		</if>

	</select>

	<delete id="deleteDeptById">
		delete from t_dept
		<if test="dId != null ">
			where d_id = #{dId}
		</if>
	</delete>


	<!--	<delete id="deleteRoleDeptByRoleId" parameterType="Long">-->
<!--		delete from sys_role_dept where role_id=#{roleId}-->
<!--	</delete>-->
<!--	-->
<!--	<select id="selectCountRoleDeptByDeptId" resultType="Integer">-->
<!--	    select count(1) from sys_role_dept where dept_id=#{deptId}  -->
<!--	</select>-->
<!--	-->
<!--	<delete id="deleteRoleDept" parameterType="Long">-->
<!-- 		delete from sys_role_dept where role_id in-->
<!-- 		<foreach collection="array" item="roleId" open="(" separator="," close=")">-->
<!-- 			#{roleId}-->
<!--        </foreach> -->
<!-- 	</delete>-->
<!--	-->
<!--	<insert id="batchRoleDept">-->
<!--		insert into sys_role_dept(role_id, dept_id) values-->
<!--		<foreach item="item" index="index" collection="list" separator=",">-->
<!--			(#{item.roleId},#{item.deptId})-->
<!--		</foreach>-->
<!--	</insert>-->
	
</mapper> 